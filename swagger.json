{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Wardrobe",
    "description" : "Simple UI to promote .war files between S3 locations",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about user"
  }, {
    "name" : "shelf",
    "description" : "Operations about shelf"
  }, {
    "name" : "stack",
    "description" : "Operations about stack"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/shelf" : {
      "post" : {
        "tags" : [ "shelf" ],
        "produces" : [ "application/xml", "application/json" ],
        "consumes" : [ "application/xml", "application/json" ],
        "operationId" : "addShelf",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Shelf object that needs to be added to the wardrobe",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shelf"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/shelf/{shelfId}" : {
      "get" : {
        "tags" : [ "shelf" ],
        "summary" : "Find shelf by ID",
        "description" : "Returns a single shelf",
        "operationId" : "getShelfById",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "shelfId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Shelf"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Shelf not found"
          }
        }
      },
      "put" : {
        "tags" : [ "shelf" ],
        "summary" : "Update an existing shelf",
        "description" : "",
        "operationId" : "updateShelf",
        "produces" : [ "application/xml", "application/json" ],
        "consumes" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "shelfId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Shelf not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "shelf" ],
        "summary" : "Update an existing shelf",
        "description" : "",
        "operationId" : "deleteShelf",
        "produces" : [ "application/xml", "application/json" ],
        "consumes" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "shelfId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/shelf/{shelfId}/promote/{promoterId}" : {
      "get" : {
        "tags" : [ "shelf" ],
        "summary" : "Find shelf by ID",
        "description" : "Returns a single shelf",
        "operationId" : "promoteDrawerId",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "shelfId",
          "in" : "path",
          "description" : "ID of shelf to promote",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "promoterId",
          "in" : "path",
          "description" : "ID of promoter to promote from",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      }
    },
    "/shelf/{shelfId}/rollback/{drawerId}" : {
      "get" : {
        "tags" : [ "shelf" ],
        "summary" : "Find shelf by ID",
        "description" : "Returns a single shelf",
        "operationId" : "rollbackToDrawerId",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "shelfId",
          "in" : "path",
          "description" : "ID of shelf to rollback",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "drawerId",
          "in" : "path",
          "description" : "ID of drawer to rollback to",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      }
    },
    "/drawer/" : {
      "post" : {
        "tags" : [ "shelf" ],
        "summary" : "Create drawer",
        "description" : ".",
        "operationId" : "createDrawer",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Drawer object that needs to be added to a shelf",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Drawer"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/drawer/{drawerId}" : {
      "get" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "drawerId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Drawer"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Drawer not found"
          }
        }
      },
      "put" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "drawerId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Shelf not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "drawerId",
          "in" : "path",
          "description" : "ID of shelf to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/stack/" : {
      "get" : {
        "tags" : [ "stack" ],
        "summary" : "Get stacks",
        "description" : ".",
        "operationId" : "getStacks",
        "produces" : [ "application/xml", "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
               type: "array",
               items: {
                "$ref" : "#/definitions/Stack"
               }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "stack not found"
          }
        }
      },
      "post" : {
        "tags" : [ "stack" ],
        "summary" : "Create stack",
        "description" : ".",
        "operationId" : "createStack",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Stack object that needs to be added to a shelf",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Stack"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/stack/{stackId}" : {
      "get" : {
        "tags" : [ "stack" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "description" : "ID of stack to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Stack"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "stack not found"
          }
        }
      },
      "put" : {
        "tags" : [ "stack" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "description" : "ID of shelf to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "stack not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "stack" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "description" : "ID of stack to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/promoter" : {
      "post" : {
        "tags" : [ "shelf" ],
        "summary" : "Create drawer",
        "description" : ".",
        "operationId" : "createPromoter",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Drawer object that needs to be added to a shelf",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Drawer"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/promoter/{promoterId}" : {
      "get" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "promoterId",
          "in" : "path",
          "description" : "ID of promoter to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Promoter"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "promoter not found"
          }
        }
      },
      "put" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "promoterId",
          "in" : "path",
          "description" : "ID of promoter to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "promoter not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "shelf" ],
        "parameters" : [ {
          "name" : "promoterId",
          "in" : "path",
          "description" : "ID of promoter to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/promote" : {
      "post" : {
        "tags" : [ "shelf" ],
        "summary" : "Promote a URI to a shelf",
        "description" : "Promotes a url to a shelf, creates a promoter if url does not exist",
        "operationId" : "promoteShelf",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "wardrobeUrl",
          "in" : "query",
          "description" : "location of shelf to promote to",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "promoteUrl",
          "in" : "query",
          "description" : "uri to promote",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/rollback" : {
      "post" : {
        "tags" : [ "shelf" ],
        "summary" : "rollback a single item",
        "description" : "rollback one version previous",
        "operationId" : "rollbackShelf",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "wardrobeUrl",
          "in" : "query",
          "description" : "location of shelf to rollback",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/createWithArray" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Creates list of users with given input array",
        "description" : "",
        "operationId" : "createUsersWithArrayInput",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of user object",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/User"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/createWithList" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Creates list of users with given input array",
        "description" : "",
        "operationId" : "createUsersWithListInput",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of user object",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/User"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "description" : "",
        "operationId" : "loginUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : {
              "X-Rate-Limit" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "calls per hour allowed by the user"
              },
              "X-Expires-After" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "date in UTC when toekn expires"
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "description" : "",
        "operationId" : "logoutUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/{username}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by user name",
        "description" : "",
        "operationId" : "getUserByName",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing. ",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "name that need to be deleted",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid user supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "Stack" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "authGroup" : {
          "type" : "string"
        },
        "shelves" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Shelf"
          }
        }
      },
      "xml" : {
        "name" : "Stack"
      }
    },
    "Drawer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateAdded" : {
          "type" : "string",
          "format" : "date"
        },
        "promoter" : {
          "$ref" : "#/definitions/Promoter"
        }
      },
      "xml" : {
        "name" : "Drawer"
      }
    },
    "Shelf" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "promoters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Promoter"
          }
        },
        "drawers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Drawer"
          }
        },
        "latest" : {
          "$ref" : "#/definitions/Drawer"
        }
      },
      "xml" : {
        "name" : "Shelf"
      }
    },
    "Promoter" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Promoter"
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userGroup" : {
          "type" : "string",
          "enum" : [ "admin", "user" ]
        },
        "userStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Status"
        }
      },
      "xml" : {
        "name" : "User"
      }
    }
  }
}
